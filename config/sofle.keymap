#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT
#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  //  600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

&mt {
    tapping-term-ms = <200>;
    flavor = "balanced";
    hold-trigger-on-release;
    quick-tap-ms = <175>;
    hold-trigger-key-positions = <28 36>;
};

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    combos {
        compatible = "zmk,combos";

        Enter {
            bindings = <&kp ENTER>;
            key-positions = <36 35>;
        };

        Backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <24 23>;
        };

        delete {
            bindings = <&kp DEL>;
            key-positions = <24 25>;
        };

        CAPs {
            bindings = <&kp CLCK>;
            key-positions = <26 27>;
        };

        ScreenShot {
            bindings = <&Screenshot>;
            key-positions = <40 41 42>;
        };

        NUM {
            bindings = <&to 2>;
            key-positions = <7 8 9>;
        };

        BLE_RGB {
            bindings = <&to 4>;
            key-positions = <5 4 3>;
        };

        Base {
            bindings = <&to 0>;
            key-positions = <33 34 35 36>;
        };

        gaming {
            bindings = <&to 3>;
            key-positions = <31 44 33 46>;
        };

        gamingenter {
            bindings = <&kp ENTER>;
            key-positions = <31 30>;
            layers = <3>;
        };

        tilde {
            bindings = <&kp TILDE>;
            key-positions = <0 1>;
            layers = <3>;
        };
    };

    macros {
        Screenshot: Screenshot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LS(LEFT_GUI)>,
                <&macro_tap>,
                <&kp S>,
                <&macro_release>,
                <&kp LS(LEFT_GUI)>;

            label = "SCREENSHOT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&kp ESC                            &kp N1        &kp N2            &kp N3           &kp N4   &kp N5         &mmv MOVE_UP     &kp N6       &kp N7         &kp N8      &kp N9             &kp N0         &mt LS(GRAVE) GRAVE
&mt LS(LEFT_BRACKET) LEFT_BRACKET  &kp Q         &kp W             &kp E            &kp R    &kp T          &mmv MOVE_DOWN   &kp Y        &kp U          &kp I       &kp O              &kp P          &mt LS(RIGHT_BRACKET) RIGHT_BRACKET
&mt LS(BACKSLASH) BACKSLASH        &kp A         &mt LEFT_SHIFT S  &kp D            &kp F    &kp G          &mmv MOVE_LEFT   &kp H        &kp J          &kp K       &mt RIGHT_SHIFT L  &kp SEMI       &kp APOS
&kp LEFT_GUI                       &kp Z         &kp X             &kp C            &kp V    &kp B          &mmv MOVE_RIGHT  &kp N        &kp M          &kp COMMA   &kp DOT            &kp FSLH       &kp ENTER
&kp C_MUTE                         &kp LEFT_ALT  &kp LCTRL         &mt LC(V) LC(C)  &kp TAB  &lt 1 SPACE    &mkp LCLK        &lt 1 SPACE  &kp BACKSPACE  &kp DELETE  &kp RCTRL          &kp RIGHT_ALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "BASE";
            label = "Base";
        };

        mouse {
            bindings = <
&trans      &trans              &trans             &trans     &trans     &trans      &mmv MOVE_UP     &trans     &trans    &trans    &trans     &mt LS(MINUS) MINUS  &mt LS(EQUAL) EQUAL
&trans      &mt UNDER KP_MINUS  &mt PLUS KP_EQUAL  &trans     &trans     &trans      &mmv MOVE_DOWN   &kp PG_UP  &kp HOME  &kp UP    &kp END    &trans               &trans
&trans      &trans              &mkp LCLK          &mkp MCLK  &mkp RCLK  &mkp MB5    &mmv MOVE_LEFT   &kp PG_DN  &kp LEFT  &kp DOWN  &kp RIGHT  &trans               &trans
&trans      &trans              &trans             &trans     &trans     &mkp MB4    &mmv MOVE_RIGHT  &trans     &trans    &trans    &trans     &trans               &trans
&kp C_MUTE  &trans              &trans             &trans     &trans     &trans      &mkp LCLK        &trans     &trans    &trans    &trans     &trans
            >;

            display-name = "mouse";
            sensor-bindings = <&scroll_encoder>;
            label = "mouse";
        };

        NUM {
            bindings = <
&kp F1  &kp F2       &kp F3  &kp F4   &kp F5   &kp F6     &kp UP_ARROW    &mt LEFT_BRACE LEFT_BRACKET  &mt RIGHT_BRACE RIGHT_BRACKET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS      &kp PLUS
&kp F7  &kp F8       &kp F9  &kp F10  &kp F11  &kp F12    &kp DOWN_ARROW  &trans                       &kp KP_NUMBER_7                &kp KP_NUMBER_8       &kp KP_NUMBER_9        &kp KP_DIVIDE  &kp KP_MULTIPLY
&trans  &trans       &trans  &trans   &trans   &trans     &kp LEFT_ARROW  &kp KP_NUMLOCK               &kp KP_NUMBER_4                &kp KP_NUMBER_5       &kp KP_NUMBER_6        &kp LESS_THAN  &kp GREATER_THAN
&trans  &bootloader  &trans  &trans   &trans   &trans     &kp RIGHT       &trans                       &kp KP_N1                      &kp KP_NUMBER_2       &kp KP_NUMBER_3        &kp DELETE     &kp BACKSPACE
&trans  &trans       &trans  &trans   &trans   &trans     &kp ENTER       &trans                       &kp KP_NUMBER_0                &kp PERIOD            &kp COMMA              &kp EQUAL
            >;

            display-name = "NUM";
            sensor-bindings = <&scroll_encoder>;
            label = "NUM";
        };

        Gaming {
            bindings = <
&kp ESC           &kp N1   &kp N2     &kp N3     &kp N4   &kp N5       &kp UP_ARROW     &kp N6     &kp N7     &kp N8         &kp N9         &kp N0     &kp GRAVE
&kp LEFT_BRACKET  &kp Q    &kp W      &kp E      &kp R    &kp T        &kp DOWN_ARROW   &kp Y      &kp U      &kp I          &kp O          &kp P      &kp LBKT
&kp HOME          &kp A    &kp S      &kp D      &kp F    &kp G        &kp LEFT_ARROW   &kp H      &kp J      &kp K          &kp L          &kp SEMI   &kp APOS
&kp LEFT_SHIFT    &kp Z    &kp X      &kp C      &kp V    &kp B        &kp RIGHT_ARROW  &kp N      &kp M      &kp COMMA      &kp DOT        &kp FSLH   &kp RIGHT_SHIFT
&kp K_MUTE        &kp END  &kp EQUAL  &kp MINUS  &kp TAB  &kp SPACE    &kp ENTER        &kp SPACE  &kp ENTER  &kp BACKSPACE  &kp RIGHT_ALT  &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
            display-name = "Gaming";
            label = "Gaming";
        };

        BLE_RGB {
            bindings = <
&bootloader  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4      &mmv MOVE_UP     &bl BL_CYCLE     &trans           &trans  &rgb_ug RGB_SPI  &trans       &bootloader
&soft_off    &trans        &trans        &trans        &bt BT_CLR    &bt BT_CLR_ALL    &mmv MOVE_DOWN   &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &trans  &rgb_ug RGB_SPD  &trans       &soft_off
&trans       &trans        &trans        &trans        &trans        &out OUT_TOG      &mmv MOVE_LEFT   &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &trans  &rgb_ug RGB_EFF  &trans       &trans
&sys_reset   &trans        &trans        &bootloader   &trans        &trans            &mmv MOVE_RIGHT  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &trans  &rgb_ug RGB_EFR  &bootloader  &sys_reset
&trans       &trans        &trans        &trans        &trans        &trans            &mkp LCLK        &bl BL_TOG       &rgb_ug RGB_TOG  &trans  &trans           &trans
            >;

            sensor-bindings = <&scroll_encoder>;
            display-name = "BLE_RGB";
            label = "BLE_RGB";
        };
    };
};
